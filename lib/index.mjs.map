{"version":3,"sources":["../src/constants/index.ts","../src/constants/base.ts","../src/constants/endpoints.ts","../src/constants/berries.ts","../src/constants/contests.ts","../src/constants/encounters.ts","../src/constants/evolutions.ts","../src/constants/games.ts","../src/constants/locations.ts","../src/constants/moves.ts","../src/constants/pokemons.ts","../src/constants/utilities.ts","../src/constants/items.ts","../src/structures/base.ts","../src/config/logger.ts","../src/clients/berry.client.ts","../src/clients/contest.client.ts","../src/clients/encounter.client.ts","../src/clients/evolution.client.ts","../src/clients/game.client.ts","../src/clients/item.client.ts","../src/clients/location.client.ts","../src/clients/machine.client.ts","../src/clients/move.client.ts","../src/clients/pokemon.client.ts","../src/clients/utility.client.ts","../src/clients/main.client.ts"],"sourcesContent":["export * from './base';\nexport * from './endpoints';\nexport * from './berries';\nexport * from './contests';\nexport * from './encounters';\nexport * from './evolutions';\nexport * from './games';\nexport * from './locations';\nexport * from './moves';\nexport * from './pokemons';\nexport * from './utilities';\nexport * from './items';\n","export enum BaseURL {\n  REST = 'https://pokeapi.co/api/v2',\n}\n","/**\n * Endpoints of the Pok√©API\n */\nexport enum Endpoints {\n  Berry = '/berry',\n  BerryFirmness = '/berry-firmness',\n  BerryFlavor = '/berry-flavor',\n  ContestType = '/contest-type',\n  ContestEffect = '/contest-effect',\n  SuperContestEffect = '/super-contest-effect',\n  EncouterMethod = '/encounter-method',\n  EncounterCondition = '/encounter-condition',\n  EncouterConditionValue = '/encounter-condition-value',\n  EvolutionChain = '/evolution-chain',\n  EvolutionTrigger = '/evolution-trigger',\n  Generation = '/generation',\n  Pokedex = '/pokedex',\n  Version = '/version',\n  VersionGroup = '/version-group',\n  Item = '/item',\n  ItemAttribute = '/item-attribute',\n  ItemCategory = '/item-category',\n  ItemFlingEffect = '/item-fling-effect',\n  ItemPocket = '/item-pocket',\n  Location = '/location',\n  LocationArea = '/location-area',\n  PalParkArea = '/pal-park-area',\n  Region = '/region',\n  Machine = '/machine',\n  Move = '/move',\n  MoveAilment = '/move-ailment',\n  MoveBattleStyle = '/move-battle-style',\n  MoveCategory = '/move-category',\n  MoveDamageClass = '/move-damage-class',\n  MoveLearnMethod = '/move-learn-method',\n  MoveTarget = '/move-target',\n  Ability = '/ability',\n  Characteristic = '/characteristic',\n  EggGroup = '/egg-group',\n  Gender = '/gender',\n  GrowthRate = '/growth-rate',\n  Nature = '/nature',\n  PokeathlonStat = '/pokeathlon-stat',\n  Pokemon = '/pokemon',\n  PokemonLocationArea = '/pokemon/:id/encounters',\n  PokemonColor = '/pokemon-color',\n  PokemonForm = '/pokemon-form',\n  PokemonHabitat = '/pokemon-habitat',\n  PokemonShape = '/pokemon-shape',\n  PokemonSpecies = '/pokemon-species',\n  Stat = '/stat',\n  Type = '/type',\n  Language = '/language',\n}\n","/** Enum of Berries (NAME - ID) */\nexport enum Berries {\n  CHERI = 1,\n  CHESTO = 2,\n  PECHA = 3,\n  RAWST = 4,\n  ASPEAR = 5,\n  LEPPA = 6,\n  ORAN = 7,\n  PERSIM = 8,\n  LUM = 9,\n  SITRUS = 10,\n  FIGY = 11,\n  WIKI = 12,\n  MAGO = 13,\n  AGUAV = 14,\n  IAPAPA = 15,\n  RAZZ = 16,\n  BLUK = 17,\n  NANAB = 18,\n  WEPEAR = 19,\n  PINAP = 20,\n  POMEG = 21,\n  KELPSY = 22,\n  QUALOT = 23,\n  HONDEW = 24,\n  GREPA = 25,\n  TAMATO = 26,\n  CORNN = 27,\n  MAGOST = 28,\n  RABUTA = 29,\n  NOMEL = 30,\n  SPELON = 31,\n  PAMTRE = 32,\n  WATMEL = 33,\n  DURIN = 34,\n  BELUE = 35,\n  OCCA = 36,\n  PASSHO = 37,\n  WACAN = 38,\n  RINDO = 39,\n  YACHE = 40,\n  CHOPLE = 41,\n  KEBIA = 42,\n  SHUCA = 43,\n  COBA = 44,\n  PAYAPA = 45,\n  TANGA = 46,\n  CHARTI = 47,\n  KASIB = 48,\n  HABAN = 49,\n  COLBUR = 50,\n  BABIRI = 51,\n  CHILAN = 52,\n  LIECHI = 53,\n  GANLON = 54,\n  SALAC = 55,\n  PETAYA = 56,\n  APICOT = 57,\n  LANSAT = 58,\n  STARF = 59,\n  ENIGMA = 60,\n  MICLE = 61,\n  CUSTAP = 62,\n  JABOCA = 63,\n  ROWAP = 64,\n}\n\n/** Enum of Berry Firmnesses (NAME - ID) */\nexport enum BerryFirmnesses {\n  VERY_SOFT = 1,\n  SOFT = 2,\n  HARD = 3,\n  VERY_HARD = 4,\n  SUPER_HARD = 5,\n}\n\nexport enum BerryFlavors {\n  SPICY = 1,\n  DRY = 2,\n  SWEET = 3,\n  BITTER = 4,\n  SOUR = 5,\n}\n","export enum ContestTypes {\n  COOL = 1,\n  BEAUTY = 2,\n  CUTE = 3,\n  SMART = 4,\n  TOUGH = 5,\n}\n","export enum EncounterMethods {\n  WALK = 1,\n  OLD_ROD = 2,\n  GOOD_ROD = 3,\n  SUPER_ROD = 4,\n  SURF = 5,\n  ROCK_SMASH = 6,\n  HEADBUTT = 7,\n  DARK_GRASS = 8,\n  GRASS_SPOTS = 9,\n  CAVE_SPOTS = 10,\n  BRIDGE_SPOTS = 11,\n  SUPER_ROD_SPOTS = 12,\n  SURF_SPOTS = 13,\n  YELLOW_FLOWERS = 14,\n  PURPLE_FLOWERS = 15,\n  RED_FLOWERS = 16,\n  ROUGH_TERRAIN = 17,\n  GIFT = 18,\n  GIFT_EGG = 19,\n  ONLY_ONE = 20,\n  POKEFLUTE = 21,\n  HEADBUTT_LOW = 22,\n  HEADBUTT_NORMAL = 23,\n  HEADBUT_HIGH = 24,\n  SQUIRT_BOTTLE = 25,\n  WAILMER_PAIL = 26,\n  SEAWEED = 27,\n}\n\nexport enum EncounterConditions {\n  SWARM = 1,\n  TIME = 2,\n  RADAR = 3,\n  SLOT2 = 4,\n  RADIO = 5,\n  SEASON = 6,\n  STARTER = 7,\n  TV_OPTION = 8,\n  STORY_PROGRESS = 9,\n  OTHER = 10,\n}\n\nexport enum EncounterConditionValues {\n  SWARM_YES = 1,\n  SWARM_NO = 2,\n  TIME_MORNING = 3,\n  TIME_DAY = 4,\n  TIME_NIGHT = 5,\n  RADAR_ON = 6,\n  RADAR_OFF = 7,\n  SLOT2_NONE = 8,\n  SLOT2_RUBY = 9,\n  SLOT2_SAPHIRE = 10,\n  SLOT2_EMERALD = 11,\n  SLOT2_FIRERED = 12,\n  SLOT2_LEAFGREEN = 13,\n  RADIO_OFF = 14,\n  RADIO_HOEN = 15,\n  RADIO_SINNOH = 16,\n  SEASON_SPRING = 17,\n  SEASON_SUMMER = 18,\n  SWASON_AUTUMN = 19,\n  SEASON_WINTER = 20,\n  STARTER_BULBASAUR = 21,\n  STARTER_SQUIRTLE = 22,\n  STARTER_CHARMANDER = 23,\n  STARTER_CHESPIN = 24,\n  STARTER_FENNEKIN = 25,\n  STARTER_FROAKIE = 26,\n  TV_OPTION_BLUE = 27,\n  TV_OPTION_RED = 28,\n  STORY_PROGRESS_AWAKENED_BEASTS = 29,\n  STORY_PROGRESS_BEAT_GALACTIC_CORONET = 30,\n  STORY_PROGRESS_OAK_ETERNA_CITY = 31,\n  STORY_PROGRESS_OAK_VERMILION_COPYCAT = 32,\n  STORY_PROGRESS_MET_TORNADUS_THUNDURUS = 33,\n  STORY_PROGRESS_BEAT_ELITE_FOUR_ROUND_TWO = 34,\n  STORY_PROGRESS_HALL_OF_FAME = 35,\n  STORY_PROGRESS_NONE = 36,\n  STORY_PROGRESS_NATIONAL_DEX = 37,\n  OTHER_NONE = 38,\n  OTHER_SNORLAX_LL_BEAT_LEAGUE = 39,\n}\n","export enum EvolutionTriggers {\n  LEVEL_UP = 1,\n  TRADE = 2,\n  USE_ITEM = 3,\n  SHED = 4,\n  SPIN = 5,\n  TOWER_OF_DARKNESS = 6,\n  TOWER_OF_WATER = 7,\n  THREE_CRITICAL_HITS = 8,\n  TAKE_DAMAGE = 9,\n  OTHER = 10,\n}\n","export enum Generations {\n  GENERATION_I = 1,\n  GENERATION_II = 2,\n  GENERATION_III = 3,\n  GENERATION_IV = 4,\n  GENERATION_V = 5,\n  GENERATION_VI = 6,\n  GENERATION_VII = 7,\n  GENERATION_VIII = 8,\n}\n\nexport enum Pokedexes {\n  NATIONAL = 1,\n  KANTO = 2,\n  ORIGINAL_JOHTO = 3,\n  HOENN = 4,\n  ORIGINAL_SINNOH = 5,\n  EXTENDED_SINNOH = 6,\n  UPDATED_JOHTO = 7,\n  ORIGINAL_UNOVA = 8,\n  UPDATED_UNOVA = 9,\n  CONQUEST_GALLERY = 11,\n  KALOS_CENTRAL = 12,\n  KALOS_COASTAL = 13,\n  KALOS_MONTAIN = 14,\n  UPDATED_HOENN = 15,\n  ORIGINAL_ALOLA = 16,\n  ORIGINAL_MELEMELE = 17,\n  ORIGINAL_AKALA = 18,\n  ORIGINAL_ULAULA = 19,\n  ORIGINAL_PONI = 20,\n  UPDATED_ALOLA = 21,\n  UPDATED_MELEMELE = 22,\n  UPDATED_AKALA = 23,\n  UPDATED_ULAULA = 24,\n  UPDATED_PONI = 25,\n  UPDATED_KANTO = 26,\n  GALAR = 27,\n  ISLE_OF_ARMOR = 28,\n  CROWN_TUNDRA = 29,\n}\n\nexport enum Versions {\n  RED = 1,\n  BLUE = 2,\n  YELLOW = 3,\n  GOLD = 4,\n  SILVER = 5,\n  CRYSTAL = 6,\n  RUBY = 7,\n  SAPPHIRE = 8,\n  EMERALD = 9,\n  FIRERED = 10,\n  LEAFGREEN = 11,\n  DIAMOND = 12,\n  PEARL = 13,\n  PLATINUM = 14,\n  HEARTGOLD = 15,\n  SOULSILVER = 16,\n  BLACK = 17,\n  WHITE = 18,\n  COLOSSEUM = 19,\n  XD = 20,\n  BLACK_2 = 21,\n  WHITE_2 = 22,\n  X = 23,\n  Y = 24,\n  OMEGA_RUBY = 25,\n  ALPHA_SAPPHIRE = 26,\n  SUN = 27,\n  MOON = 28,\n  ULTRA_SUN = 29,\n  ULTRA_MOON = 30,\n  LETS_GO_PIKACHU = 31,\n  LETS_GO_EEVEE = 32,\n  SWORD = 33,\n  SHIELD = 34,\n  THE_ISLE_OF_ARMOR = 35,\n  THE_CROWN_TUNDRA = 36,\n  BRILLIANT_DIAMOND = 37,\n  SHINING_PEARL = 38,\n  LEGENDS_ARCEUS = 39,\n}\n\nexport enum VersionGroups {\n  RED_BLUE = 1,\n  YELLOW = 2,\n  GOLD_SILVER = 3,\n  CRYSTAL = 4,\n  RUBY_SAPPHIRE = 5,\n  EMERALD = 6,\n  FIRERED_LEAFGREEN = 7,\n  DIAMOND_PEARL = 8,\n  PLATINUM = 9,\n  HEARTGOLD_SOULSILVER = 10,\n  BLACK_WHITE = 11,\n  COLOSSEUM = 12,\n  XD = 13,\n  BLACK_2_WHITE_2 = 14,\n  X_Y = 15,\n  OMEGA_RUBY_ALPHA_SAPPHIRE = 16,\n  SUN_MOON = 17,\n  ULTRA_SUN_ULTRA_MOON = 18,\n  LETS_GO = 19,\n  SWORD_SHIELD = 20,\n  THE_ISLE_OF_ARMOR = 21,\n  THE_CROWN_TUNDRA = 22,\n  BRILLIANT_DIAMOND_AND_SHINING_PEARL = 23,\n  LEGENDS_ARCEUS = 24,\n}\n","export enum Regions {\n  KANTO = 1,\n  JOHTO = 2,\n  HOENN = 3,\n  SINNOH = 4,\n  UNOVA = 5,\n  KALOS = 6,\n  ALOLA = 7,\n  GALAR = 8,\n  HISUI = 9,\n}\n\nexport enum PalParkAreas {\n  FOREST = 1,\n  FIELD = 2,\n  MOUNTAIN = 3,\n  POND = 4,\n  SEA = 5,\n}\n","export enum MoveAilmtents {\n  UNKNOWN = -1,\n  NONE = 0,\n  PARALYSIS = 1,\n  SLEEP = 2,\n  FREEZE = 3,\n  BURN = 4,\n  POISON = 5,\n  CONFUSION = 6,\n  INFATUATION = 7,\n  TRAP = 8,\n  NIGHTMARE = 9,\n  TORMENT = 12,\n  DISABLE = 13,\n  YAWN = 14,\n  HEAL_BLOCK = 15,\n  NO_TYPE_IMMUNITY = 17,\n  LEECH_SEED = 18,\n  EMBARGO = 19,\n  PERISH_SONG = 20,\n  INGRAIN = 21,\n  SILENCE = 24,\n  TAR_SHOT = 42,\n}\n\nexport enum MoveBattleStyles {\n  ATTACK = 1,\n  DEFENSE = 2,\n  SUPPORT = 3,\n}\n\nexport enum MoveCategories {\n  DAMAGE = 0,\n  AILMENT = 1,\n  NET_GOOD_STATS = 2,\n  HEAL = 3,\n  DAMAGE_AILMENT = 4,\n  SWAGGER = 5,\n  DAMAGE_LOWER = 6,\n  DAMAGE_RAISE = 7,\n  DAMAGE_HEAL = 8,\n  OHKO = 9,\n  WHOLE_FIELD_EFFECT = 10,\n  FIELD_EFFECT = 11,\n  FORCE_SWITCH = 12,\n  UNIQUE = 13,\n}\n\nexport enum MoveDamageClasses {\n  STATUS = 1,\n  PHYSICAL = 2,\n  SPECIAL = 3,\n}\n\nexport enum MoveLearnMethods {\n  LEVEL_UP = 1,\n  EGG = 2,\n  TUTOR = 3,\n  MACHINE = 4,\n  STADIUM_SURFING_PIKACHU = 5,\n  LIGHT_BALL_EGG = 6,\n  COLOSSEUM_PURIFICATION = 7,\n  XD_SHADOW = 8,\n  XD_PURIFICATION = 9,\n  FORM_CHANGE = 10,\n}\n\nexport enum MoveTargets {\n  SPECIFIC_MOVE = 1,\n  SELECTED_POKEMON_ME_FIRST = 2,\n  ALLY = 3,\n  USERS_FIELD = 4,\n  USER_OR_ALLY = 5,\n  OPPONENTS_FIELD = 6,\n  USER = 7,\n  RANDOM_OPPONENT = 8,\n  ALL_OTHER_POKEMON = 9,\n  SELECTED_POKEMON = 10,\n  ALL_OPPONENTS = 11,\n  ENTIRE_FIELD = 12,\n  USER_AND_ALIES = 13,\n  ALL_POKEMON = 14,\n  ALL_ALLIES = 15,\n}\n","export enum EggGroups {\n  MONSTER = 1,\n  WATER1 = 2,\n  BUG = 3,\n  FLYING = 4,\n  GROUND = 5,\n  FAIRY = 6,\n  PLANT = 7,\n  HUMANSHAPE = 8,\n  WATER3 = 9,\n  MINERAL = 10,\n  INDETERMINATE = 11,\n  WATER2 = 12,\n  DITTO = 13,\n  DRAGON = 14,\n  NO_EGGS = 15,\n}\n\nexport enum Genders {\n  FEMALE = 1,\n  MALE = 2,\n  GENDERLESS = 3,\n}\n\nexport enum GrowthRates {\n  SLOW = 1,\n  MEDIUM = 2,\n  FAST = 3,\n  MEDIUM_SLOW = 4,\n  SLOW_THEN_VERY_FAST = 5,\n  FAST_THEN_VERY_SLOW = 6,\n}\n\nexport enum Natures {\n  HARDY = 1,\n  BOLD = 2,\n  MODEST = 3,\n  CALM = 4,\n  TIMID = 5,\n  LONELY = 6,\n  DOCILE = 7,\n  MILD = 8,\n  GENTLE = 9,\n  HASTY = 10,\n  ADAMANT = 11,\n  IMPISH = 12,\n  BASHFUL = 13,\n  CAREFUL = 14,\n  RASH = 15,\n  JOLLY = 16,\n  NAUGHTY = 17,\n  LAX = 18,\n  QUIRKY = 19,\n  NAIVE = 20,\n  BRAVE = 21,\n  RELAXED = 22,\n  QUIET = 23,\n  SASSY = 24,\n  SERIOUS = 25,\n}\n\nexport enum PokeathlonStats {\n  SPEED = 1,\n  POWER = 2,\n  SKILL = 3,\n  STAMINA = 4,\n  JUMP = 5,\n}\n\nexport enum PokemonColors {\n  BLACK = 1,\n  BLUE = 2,\n  BROWN = 3,\n  GRAY = 4,\n  GREEN = 5,\n  PINK = 6,\n  PURPLE = 7,\n  RED = 8,\n  WHITE = 9,\n  YELLOW = 10,\n}\n\nexport enum PokemonHabitats {\n  CAVE = 1,\n  FOREST = 2,\n  GRASSLAND = 3,\n  MONTAIN = 4,\n  RARE = 5,\n  ROUGH_TERRAIN = 6,\n  SEA = 7,\n  URBAN = 8,\n  WATERS_EDGE = 9,\n}\n\nexport enum PokemonShapes {\n  BALL = 1,\n  SQUIGGLE = 2,\n  FISH = 3,\n  ARMS = 4,\n  BLOB = 5,\n  UPRIGHT = 6,\n  LEGS = 7,\n  QUADRUPED = 8,\n  WINGS = 9,\n  TENTACLES = 10,\n  HEADS = 11,\n  HUMANOID = 12,\n  BUG_WINGS = 13,\n  ARMOR = 14,\n}\n\nexport enum Stats {\n  HP = 1,\n  ATTACK = 2,\n  DEFENSE = 3,\n  SPECIAL_ATTACK = 4,\n  SPECIAL_DEFENSE = 5,\n  SPEED = 6,\n  ACCURACY = 7,\n  EVASION = 8,\n}\n\nexport enum Types {\n  NORMAL = 1,\n  FIGHTING = 2,\n  FLYING = 3,\n  POISON = 4,\n  GROUND = 5,\n  ROCK = 6,\n  BUG = 7,\n  GHOST = 8,\n  STEEL = 9,\n  FIRE = 10,\n  WATER = 11,\n  GRASS = 12,\n  ELECTRIC = 13,\n  PSYCHIC = 14,\n  ICE = 15,\n  DRAGON = 16,\n  DARK = 17,\n  FAIRY = 18,\n  UNKNOWN = 10_001,\n  SHADOW = 10_002,\n}\n","export enum Languages {\n  JA_HRKT = 1,\n  ROOMAJI = 2,\n  KO = 3,\n  ZH_HANT = 4,\n  FR = 5,\n  DE = 6,\n  ES = 7,\n  IT = 8,\n  EN = 9,\n  CS = 10,\n  JA = 11,\n  ZH_HANS = 12,\n  PT_BR = 13,\n}\n","export enum ItemAttributes {\n  COUNTABLE = 1,\n  CONSUMABLE = 2,\n  USABLE_OVERWORLD = 3,\n  USABLE_IN_BATTLE = 4,\n  HOLDABLE = 5,\n  HOLDABLE_PASSIVE = 6,\n  HOLDABLE_ACTIVE = 7,\n  UNDERGROUND = 8,\n}\n\nexport enum ItemCategories {\n  STAT_BOOSTS = 1,\n  EFFORT_DROP = 2,\n  MEDICINE = 3,\n  OTHER = 4,\n  IN_A_PINCH = 5,\n  PICKY_HEALING = 6,\n  TYPE_PROTECTION = 7,\n  BAKING_ONLY = 8,\n  COLLECTIBLES = 9,\n  EVOLUTION = 10,\n  SPELUNKING = 11,\n  HELD_ITEMS = 12,\n  CHOICE = 13,\n  EFFORT_TRAINING = 14,\n  BAD_HELD_ITEMS = 15,\n  TRAINING = 16,\n  PLATES = 17,\n  SPECIES_SPECIFIC = 18,\n  TYPE_ENHANCEMENT = 19,\n  EVENT_ITEMS = 20,\n  GAMEPLAY = 21,\n  PLOT_ADVANCEMENT = 22,\n  UNUSED = 23,\n  LOOT = 24,\n  ALL_MAIL = 25,\n  VITAMINS = 26,\n  HEALING = 27,\n  PP_RECOVERY = 28,\n  REVIVAL = 29,\n  STATUS_CURES = 30,\n  MULCH = 32,\n  SPECIAL_BALLS = 33,\n  STANDARD_BALLS = 34,\n  DEX_COMPLETION = 35,\n  SCARVES = 36,\n  ALL_MACHINES = 37,\n  FLUTES = 38,\n  APRICORN_BALLS = 39,\n  APRICORN_BOX = 40,\n  DATA_CARDS = 41,\n  JEWELS = 42,\n  MIRACLE_SHOOTER = 43,\n  MEGA_STONES = 44,\n  MEMORIES = 45,\n  Z_CRYSTALS = 46,\n  SPECIES_CANDIES = 47,\n  CATCHING_BONUS = 48,\n  DYNAMAX_CRISTALS = 49,\n  NATURE_MINTS = 50,\n  CURRY_INGREDIENTS = 51,\n}\n\nexport enum ItemFlingEffects {\n  BADLY_POISON = 1,\n  BURN = 2,\n  BERRY_EFFECT = 3,\n  HERB_EFFECT = 4,\n  PARALYZE = 5,\n  POISON = 6,\n  FLINCH = 7,\n}\n\nexport enum ItemPockets {\n  MISC = 1,\n  MEDICINE = 2,\n  POKEBALLS = 3,\n  MACHINES = 4,\n  BERRIES = 5,\n  MAIL = 6,\n  BATTLE = 7,\n  KEY = 8,\n}\n","import axios, { AxiosError } from 'axios';\nimport pino from 'pino';\nimport {\n  setupCache,\n  AxiosCacheInstance,\n  CacheAxiosResponse,\n  InternalCacheRequestConfig,\n  CacheOptions,\n} from 'axios-cache-interceptor';\nimport { BaseURL } from '../constants';\nimport {\n  createLogger,\n  handleRequest,\n  handleRequestError,\n  handleResponse,\n  handleResponseError,\n} from '../config/logger';\n\n/**\n * ## Client Args\n * Used to pass optional configuration for logging and cache to the clients.\n */\nexport interface ClientArgs {\n  /**\n   * ## Logger Options\n   * Options for the client logger.\n   * @see https://getpino.io/#/docs/api?id=options\n   */\n  logOptions?: pino.LoggerOptions;\n  /**\n   * ## Axios Cache Options\n   * Options for cache.\n   * @see https://github.com/RasCarlito/axios-cache-adapter\n   */\n  cacheOptions?: CacheOptions;\n  /**\n   * ## Base URL\n   * Location of the Pok√©API. Leave empty to use the official Pok√©API instance.\n   */\n  baseURL?: string;\n}\n\n/**\n * ### Base Client\n */\nexport class BaseClient {\n  protected api: AxiosCacheInstance;\n\n  private logger: pino.Logger;\n\n  /**\n   *\n   */\n  constructor(clientOptions?: ClientArgs) {\n    this.api = setupCache(\n      axios.create({\n        baseURL: clientOptions?.baseURL ?? BaseURL.REST,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }),\n      clientOptions?.cacheOptions\n    );\n\n    this.logger = createLogger({\n      enabled: !(\n        clientOptions?.logOptions?.enabled === undefined ||\n        clientOptions?.logOptions.enabled === false\n      ),\n      ...clientOptions?.logOptions,\n    });\n\n    this.api.interceptors.request.use(\n      (config: InternalCacheRequestConfig) => handleRequest(config, this.logger),\n      (error: AxiosError<string>) => handleRequestError(error, this.logger)\n    );\n\n    this.api.interceptors.response.use(\n      (response: CacheAxiosResponse) => handleResponse(response, this.logger),\n      (error: AxiosError<string>) => handleResponseError(error, this.logger)\n    );\n  }\n}\n","import { AxiosError } from 'axios';\nimport { CacheAxiosResponse, InternalCacheRequestConfig } from 'axios-cache-interceptor';\n\nimport pino from 'pino';\n\nexport const createLogger = (options?: pino.LoggerOptions | pino.DestinationStream): pino.Logger =>\n  pino(options);\n\nexport const handleRequest = (\n  config: InternalCacheRequestConfig,\n  logger: pino.Logger\n): InternalCacheRequestConfig => {\n  logger.info(`[ Request Config ] ${config.method?.toUpperCase() || ''} | ${config.url || ''}`);\n  return config;\n};\n\nexport const handleRequestError = (\n  error: AxiosError<unknown>,\n  logger: pino.Logger\n): Promise<AxiosError<unknown>> => {\n  logger.error(`[ Request Error ] CODE ${error.code || 'UNKNOWN'} | ${error.message}`);\n  throw error;\n};\n\nexport const handleResponse = (\n  response: CacheAxiosResponse,\n  logger: pino.Logger\n): CacheAxiosResponse => {\n  logger.info(response.data);\n  return response;\n};\n\nexport const handleResponseError = (\n  error: AxiosError<unknown>,\n  logger: pino.Logger\n): Promise<AxiosError<unknown>> => {\n  logger.error(`[ Response Error ] CODE ${error.code || 'UNKNOWN'} | ${error.message}`);\n  throw error;\n};\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { Berry, BerryFirmness, BerryFlavor, NamedAPIResourceList } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Berry Client\n *\n * Client used to access the Berry Endpoints:\n *  - [Berries](https://pokeapi.co/docs/v2#berries)\n *  - [Berry Firmnesses](https://pokeapi.co/docs/v2#berry-firmnesses)\n *  - [Berry Flavors](https://pokeapi.co/docs/v2#berry-flavors)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#berries-section)\n */\nexport class BerryClient extends BaseClient {\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Berry by it's name\n   * @param name The berry name\n   * @returns A Berry\n   */\n  public async getBerryByName(name: string): Promise<Berry> {\n    return new Promise<Berry>((resolve, reject) => {\n      this.api\n        .get<Berry>(`${Endpoints.Berry}/${name}`)\n        .then((response: AxiosResponse<Berry>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Berry by it's ID\n   * @param id The Berry ID\n   * @returns A Berry\n   */\n  public async getBerryById(id: number): Promise<Berry> {\n    return new Promise<Berry>((resolve, reject) => {\n      this.api\n        .get<Berry>(`${Endpoints.Berry}/${id}`)\n        .then((response: AxiosResponse<Berry>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Berry Firmness by it's ID\n   * @param id The Berry ID\n   * @returns Berry Firmness\n   */\n  public async getBerryFirmnessById(id: number): Promise<BerryFirmness> {\n    return new Promise<BerryFirmness>((resolve, reject) => {\n      this.api\n        .get<BerryFirmness>(`${Endpoints.BerryFirmness}/${id}`)\n        .then((response: AxiosResponse<BerryFirmness>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Berry Firmness by it's ID\n   * @param name The Berry name\n   * @returns Berry Firmness\n   */\n  public async getBerryFirmnessByName(name: string): Promise<BerryFirmness> {\n    return new Promise<BerryFirmness>((resolve, reject) => {\n      this.api\n        .get<BerryFirmness>(`${Endpoints.BerryFirmness}/${name}`)\n        .then((response: AxiosResponse<BerryFirmness>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Flavors determine whether a Pok√©mon will benefit or suffer from eating a berry based on their nature.\n   * Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.\n   * @param id The Berry Flavor ID\n   * @returns Berry Flavor\n   */\n  public async getBerryFlavorById(id: number): Promise<BerryFlavor> {\n    return new Promise<BerryFlavor>((resolve, reject) => {\n      this.api\n        .get<BerryFlavor>(`${Endpoints.BerryFlavor}/${id}`)\n        .then((response: AxiosResponse<BerryFlavor>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Flavors determine whether a Pok√©mon will benefit or suffer from eating a berry based on their nature.\n   * Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.\n   * @param name The Berry Flavor name\n   * @returns Berry Flavor\n   */\n  public async getBerryFlavorByName(name: string): Promise<BerryFlavor> {\n    return new Promise<BerryFlavor>((resolve, reject) => {\n      this.api\n        .get<BerryFlavor>(`${Endpoints.BerryFlavor}/${name}`)\n        .then((response: AxiosResponse<BerryFlavor>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Berries\n   * @param offset The first item that you will get\n   * @param limit How many berries per page\n   * @returns A list of berries\n   */\n  public listBerries(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Berry}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Berries\n   * @param offset The first item that you will get\n   * @param limit How many berry firmnesses per page\n   * @returns A list of berry firmnesses\n   */\n  public listBerryFirmnesses(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.BerryFirmness}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Berry Flavors\n   * @param offset The first item that you will get\n   * @param limit How many Berry Flavors per page\n   * @returns A list of Berry Flavors\n   */\n  public listBerryFlavors(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.BerryFlavor}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { ContestEffect, ContestType, NamedAPIResourceList, SuperContestEffect } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Contest Client\n *\n * Client used to access the Contest Endpoints:\n *  - [Contest Types](https://pokeapi.co/docs/v2#contest-types)\n *  - [Contest Effects](https://pokeapi.co/docs/v2#contest-effects)\n *  - [Super Contest Effects](https://pokeapi.co/docs/v2#super-contest-effects)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#contests-section)\n */\nexport class ContestClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Contest Type by it's name\n   * @param name  The contest type name\n   * @returns A Contest Type\n   */\n  public async getContestTypeByName(name: string): Promise<ContestType> {\n    return new Promise<ContestType>((resolve, reject) => {\n      this.api\n        .get<ContestType>(`${Endpoints.ContestType}/${name}`)\n        .then((response: AxiosResponse<ContestType>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Contest Type by it's ID\n   * @param id The Contest Type ID\n   * @returns A Contest Type\n   */\n  public async getContestTypeById(id: number): Promise<ContestType> {\n    return new Promise<ContestType>((resolve, reject) => {\n      this.api\n        .get<ContestType>(`${Endpoints.ContestType}/${id}`)\n        .then((response: AxiosResponse<ContestType>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Contest Effect by it's ID\n   * @param id The Contest Effect ID\n   * @returns Contest Effect\n   */\n  public async getContestEffectById(id: number): Promise<ContestEffect> {\n    return new Promise<ContestEffect>((resolve, reject) => {\n      this.api\n        .get<ContestEffect>(`${Endpoints.ContestEffect}/${id}`)\n        .then((response: AxiosResponse<ContestEffect>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Super Contest Effect by it's ID\n   * @param id The Super Contest Effect ID\n   * @returns Super Contest Effect\n   */\n  public async getSuperContestEffectById(id: number): Promise<SuperContestEffect> {\n    return new Promise<SuperContestEffect>((resolve, reject) => {\n      this.api\n        .get<SuperContestEffect>(`${Endpoints.SuperContestEffect}/${id}`)\n        .then((response: AxiosResponse<SuperContestEffect>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Contest Types\n   * @param offset The first item that you will get\n   * @param limit How many contest types per page\n   * @returns A list of contest types\n   */\n  public async listContestTypes(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ContestType}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Contest Effects\n   * @param offset The first item that you will get\n   * @param limit How many contest effects per page\n   * @returns A list of contest effects\n   */\n  public async listContestEffects(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ContestEffect}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Super Contest Effects\n   * @param offset The first item that you will get\n   * @param limit How many Super Contest Effect per page\n   * @returns A list of Super Contest Effect\n   */\n  public async listSuperContestEffects(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.SuperContestEffect}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport {\n  EncounterCondition,\n  EncounterConditionValue,\n  EncounterMethod,\n  NamedAPIResourceList,\n} from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Encounter Client\n *\n * Client used to access the Encounter Endpoints:\n *  - [Encounter Methods](https://pokeapi.co/docs/v2#encounter-methods)\n *  - [Encounter Conditions](https://pokeapi.co/docs/v2#encounter-conditions)\n *  - [Encounter Condition Values](https://pokeapi.co/docs/v2#encounter-condition-values)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#encounters-section)\n */\nexport class EncounterClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get an Encounter Method by it's name\n   * @param name The Encounter Method name\n   * @returns An Encounter Method\n   */\n  public async getEncounterMethodByName(name: string): Promise<EncounterMethod> {\n    return new Promise<EncounterMethod>((resolve, reject) => {\n      this.api\n        .get<EncounterMethod>(`${Endpoints.EncouterMethod}/${name}`)\n        .then((response: AxiosResponse<EncounterMethod>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Encounter Method by it's ID\n   * @param id The Encounter Method ID\n   * @returns An Encounter Method\n   */\n  public async getEncounterMethodById(id: number): Promise<EncounterMethod> {\n    return new Promise<EncounterMethod>((resolve, reject) => {\n      this.api\n        .get<EncounterMethod>(`${Endpoints.EncouterMethod}/${id}`)\n        .then((response: AxiosResponse<EncounterMethod>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Encounter Condition by it's ID\n   * @param id The Encounter Condition ID\n   * @returns An Encounter Condition\n   */\n  public async getEncounterConditionById(id: number): Promise<EncounterCondition> {\n    return new Promise<EncounterCondition>((resolve, reject) => {\n      this.api\n        .get<EncounterCondition>(`${Endpoints.EncounterCondition}/${id}`)\n        .then((response: AxiosResponse<EncounterCondition>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Encounter Condition by it's name\n   * @param name The Encounter Condition name\n   * @returns An Encounter Condition\n   */\n  public async getEncounterConditionByName(name: string): Promise<EncounterCondition> {\n    return new Promise<EncounterCondition>((resolve, reject) => {\n      this.api\n        .get<EncounterCondition>(`${Endpoints.EncounterCondition}/${name}`)\n        .then((response: AxiosResponse<EncounterCondition>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Encounter Condition Value by it's name\n   * @param name The Encounter Condition Value name\n   * @returns An Encounter Condition Value\n   */\n  public async getEncounterConditionValueByName(name: string): Promise<EncounterConditionValue> {\n    return new Promise<EncounterConditionValue>((resolve, reject) => {\n      this.api\n        .get<EncounterConditionValue>(`${Endpoints.EncouterConditionValue}/${name}`)\n        .then((response: AxiosResponse<EncounterConditionValue>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Encounter Condition Value by it's ID\n   * @param id The Encounter Condition Value ID\n   * @returns An Encounter Condition Value\n   */\n  public async getEncounterConditionValueById(id: number): Promise<EncounterConditionValue> {\n    return new Promise<EncounterConditionValue>((resolve, reject) => {\n      this.api\n        .get<EncounterConditionValue>(`${Endpoints.EncouterConditionValue}/${id}`)\n        .then((response: AxiosResponse<EncounterConditionValue>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Encounter Methods\n   * @param offset The first item that you will get\n   * @param limit How many Encounter Methods per page\n   * @returns A list of Encounter Methods\n   */\n  public async listEncounterMethods(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EncouterMethod}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Encounter Conditions\n   * @param offset The first item that you will get\n   * @param limit How many Encounter Conditions per page\n   * @returns A list of Encounter Methods\n   */\n  public async listEncounterConditions(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EncounterCondition}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Encounter Condition Values\n   * @param offset The first item that you will get\n   * @param limit How many Encounter Condition Values per page\n   * @returns A list of Encounter Condition Values\n   */\n  public async listEncounterConditionValues(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EncouterConditionValue}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { EvolutionChain, EvolutionTrigger, NamedAPIResourceList } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Evolution Client\n *\n * Client used to access the Berry Endpoints:\n *  - [Evolution Chains](https://pokeapi.co/docs/v2#evolution-chains)\n *  - [Evolution Triggers](https://pokeapi.co/docs/v2#evolution-triggers)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#evolution-section)\n */\nexport class EvolutionClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get an Evolution Chain by it's ID\n   * @param id The Evolution Chain ID\n   * @returns An Evolution Chain\n   */\n  public async getEvolutionChainById(id: number): Promise<EvolutionChain> {\n    return new Promise<EvolutionChain>((resolve, reject) => {\n      this.api\n        .get<EvolutionChain>(`${Endpoints.EvolutionChain}/${id}`)\n        .then((response: AxiosResponse<EvolutionChain>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Evolution Trigger by it's ID\n   * @param id The Evolution Trigger ID\n   * @returns An Evolution Trigger\n   */\n  public async getEvolutionTriggerById(id: number): Promise<EvolutionTrigger> {\n    return new Promise<EvolutionTrigger>((resolve, reject) => {\n      this.api\n        .get<EvolutionTrigger>(`${Endpoints.EvolutionTrigger}/${id}`)\n        .then((response: AxiosResponse<EvolutionTrigger>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Evolution Trigger by it's name\n   * @param name The Evolution Trigger name\n   * @returns An Evolution Trigger\n   */\n  public async getEvolutionTriggerByName(name: string): Promise<EvolutionTrigger> {\n    return new Promise<EvolutionTrigger>((resolve, reject) => {\n      this.api\n        .get<EvolutionTrigger>(`${Endpoints.EvolutionTrigger}/${name}`)\n        .then((response: AxiosResponse<EvolutionTrigger>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Evolution Chains\n   * @param offset The first item that you will get\n   * @param limit How many Evolution Chains per page\n   * @returns A list of Evolution Chains\n   */\n  public async listEvolutionChains(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EvolutionChain}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Evolution Triggers\n   * @param offset The first item that you will get\n   * @param limit How many Evolution Triggers per page\n   * @returns A list of Evolution Triggers\n   */\n  public async listEvolutionTriggers(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EvolutionTrigger}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { Generation, NamedAPIResourceList, Pokedex, Version, VersionGroup } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Game Client\n *\n * Client used to access the Game Endpoints:\n *  - [Generations](https://pokeapi.co/docs/v2#generations)\n *  - [Pokedexes](https://pokeapi.co/docs/v2#pokedexes)\n *  - [Versions](https://pokeapi.co/docs/v2#version)\n *  - [Version Groups](https://pokeapi.co/docs/v2#version-groups)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#games-section)\n */\nexport class GameClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Generation by it's name\n   * @param name The generation name\n   * @returns A Generation\n   */\n  public async getGenerationByName(name: string): Promise<Generation> {\n    return new Promise<Generation>((resolve, reject) => {\n      this.api\n        .get<Generation>(`${Endpoints.Generation}/${name}`)\n        .then((response: AxiosResponse<Generation>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Generation by it's ID\n   * @param id The generation ID\n   * @returns A Generation\n   */\n  public async getGenerationById(id: number): Promise<Generation> {\n    return new Promise<Generation>((resolve, reject) => {\n      this.api\n        .get<Generation>(`${Endpoints.Generation}/${id}`)\n        .then((response: AxiosResponse<Generation>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokedex by it's name\n   * @param name The pokedex name\n   * @returns A Pokedex\n   */\n  public async getPokedexByName(name: string): Promise<Pokedex> {\n    return new Promise<Pokedex>((resolve, reject) => {\n      this.api\n        .get<Pokedex>(`${Endpoints.Pokedex}/${name}`)\n        .then((response: AxiosResponse<Pokedex>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokedex by it's ID\n   * @param id The pokedex ID\n   * @returns A Pokedex\n   */\n  public async getPokedexById(id: number): Promise<Pokedex> {\n    return new Promise<Pokedex>((resolve, reject) => {\n      this.api\n        .get<Pokedex>(`${Endpoints.Pokedex}/${id}`)\n        .then((response: AxiosResponse<Pokedex>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Version by it's name\n   * @param name The version name\n   * @returns A Version\n   */\n  public async getVersionByName(name: string): Promise<Version> {\n    return new Promise<Version>((resolve, reject) => {\n      this.api\n        .get<Version>(`${Endpoints.Version}/${name}`)\n        .then((response: AxiosResponse<Version>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Version by it's ID\n   * @param id The version ID\n   * @returns A Version\n   */\n  public async getVersionById(id: number): Promise<Version> {\n    return new Promise<Version>((resolve, reject) => {\n      this.api\n        .get<Version>(`${Endpoints.Version}/${id}`)\n        .then((response: AxiosResponse<Version>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Version Group by it's name\n   * @param name The version group name\n   * @returns A Version Group\n   */\n  public async getVersionGroupByName(name: string): Promise<VersionGroup> {\n    return new Promise<VersionGroup>((resolve, reject) => {\n      this.api\n        .get<VersionGroup>(`${Endpoints.VersionGroup}/${name}`)\n        .then((response: AxiosResponse<VersionGroup>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Version Group by it's ID\n   * @param id The version group ID\n   * @returns A Version Group\n   */\n  public async getVersionGroupById(id: number): Promise<VersionGroup> {\n    return new Promise<VersionGroup>((resolve, reject) => {\n      this.api\n        .get<VersionGroup>(`${Endpoints.VersionGroup}/${id}`)\n        .then((response: AxiosResponse<VersionGroup>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Generations\n   * @param offset The first item that you will get\n   * @param limit How many Generations per page\n   * @returns A list of Generations\n   */\n  public async listGenerations(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Generation}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokedexes\n   * @param offset The first item that you will get\n   * @param limit How many Pokedexes per page\n   * @returns A list of Pokedexes\n   */\n  public async listPokedexes(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Pokedex}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Versions\n   * @param offset The first item that you will get\n   * @param limit How many Versions per page\n   * @returns A list of Versions\n   */\n  public async listVersions(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Version}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Version Groups\n   * @param offset The first item that you will get\n   * @param limit How many Version Groups per page\n   * @returns A list of Version Groups\n   */\n  public async listVersionGroups(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.VersionGroup}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport {\n  Item,\n  ItemAttribute,\n  ItemCategory,\n  ItemFlingEffect,\n  ItemPocket,\n  NamedAPIResourceList,\n} from '../models';\nimport { Endpoints } from '../constants/endpoints';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Item Client\n *\n * Client used to access the Item Endpoints:\n *  - [Item](https://pokeapi.co/docs/v2#item)\n *  - [Item Attributes](https://pokeapi.co/docs/v2#item-attributes)\n *  - [Item Categories](https://pokeapi.co/docs/v2#item-categories)\n *  - [Item Filing Effects](https://pokeapi.co/docs/v2#item-fling-effects)\n *  - [Item Pockets](https://pokeapi.co/docs/v2#item-pockets)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#items-section)\n */\nexport class ItemClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get an Item by it's name\n   * @param name The item name\n   * @returns An Item\n   */\n  public async getItemByName(name: string): Promise<Item> {\n    return new Promise<Item>((resolve, reject) => {\n      this.api\n        .get<Item>(`${Endpoints.Item}/${name}`)\n        .then((response: AxiosResponse<Item>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item by it's ID\n   * @param id The item ID\n   * @returns An Item\n   */\n  public async getItemById(id: number): Promise<Item> {\n    return new Promise<Item>((resolve, reject) => {\n      this.api\n        .get<Item>(`${Endpoints.Item}/${id}`)\n        .then((response: AxiosResponse<Item>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Attribute by it's name\n   * @param name The item attribute name\n   * @returns An Item Attribute\n   */\n  public async getItemAttributeByName(name: string): Promise<ItemAttribute> {\n    return new Promise<ItemAttribute>((resolve, reject) => {\n      this.api\n        .get<ItemAttribute>(`${Endpoints.ItemAttribute}/${name}`)\n        .then((response: AxiosResponse<ItemAttribute>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Attribute by it's ID\n   * @param id The item attribute ID\n   * @returns An Item Attribute\n   */\n  public async getItemAttributeById(id: number): Promise<ItemAttribute> {\n    return new Promise<ItemAttribute>((resolve, reject) => {\n      this.api\n        .get<ItemAttribute>(`${Endpoints.ItemAttribute}/${id}`)\n        .then((response: AxiosResponse<ItemAttribute>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Category by it's name\n   * @param name The item category name\n   * @returns An Item Category\n   */\n  public async getItemCategoryByName(name: string): Promise<ItemCategory> {\n    return new Promise<ItemCategory>((resolve, reject) => {\n      this.api\n        .get<ItemCategory>(`${Endpoints.ItemCategory}/${name}`)\n        .then((response: AxiosResponse<ItemCategory>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Category by it's ID\n   * @param id The item category ID\n   * @returns An Item Category\n   */\n  public async getItemCategoryById(id: number): Promise<ItemCategory> {\n    return new Promise<ItemCategory>((resolve, reject) => {\n      this.api\n        .get<ItemCategory>(`${Endpoints.ItemCategory}/${id}`)\n        .then((response: AxiosResponse<ItemCategory>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Filing Effect by it's name\n   * @param name The item filing effect name\n   * @returns An Item Filing Effect\n   */\n  public async getItemFlingEffectByName(name: string): Promise<ItemFlingEffect> {\n    return new Promise<ItemFlingEffect>((resolve, reject) => {\n      this.api\n        .get<ItemFlingEffect>(`${Endpoints.ItemFlingEffect}/${name}`)\n        .then((response: AxiosResponse<ItemFlingEffect>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Filing Effect by it's ID\n   * @param id The item filing effect ID\n   * @returns An Item Filing Effect\n   */\n  public async getItemFlingEffectById(id: number): Promise<ItemFlingEffect> {\n    return new Promise<ItemFlingEffect>((resolve, reject) => {\n      this.api\n        .get<ItemFlingEffect>(`${Endpoints.ItemFlingEffect}/${id}`)\n        .then((response: AxiosResponse<ItemFlingEffect>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Pocket by it's name\n   * @param name The item pocket name\n   * @returns An Item Pocket\n   */\n  public async getItemPocketByName(name: string): Promise<ItemPocket> {\n    return new Promise<ItemPocket>((resolve, reject) => {\n      this.api\n        .get<ItemPocket>(`${Endpoints.ItemPocket}/${name}`)\n        .then((response: AxiosResponse<ItemPocket>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Item Pocket by it's ID\n   * @param id The item pocket ID\n   * @returns An Item Pocket\n   */\n  public async getItemPocketById(id: number): Promise<ItemPocket> {\n    return new Promise<ItemPocket>((resolve, reject) => {\n      this.api\n        .get<ItemPocket>(`${Endpoints.ItemPocket}/${id}`)\n        .then((response: AxiosResponse<ItemPocket>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Items\n   * @param offset The first item that you will get\n   * @param limit How many Items per page\n   * @returns A list of Items\n   */\n  public async listItems(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Item}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Item Attributes\n   * @param offset The first item that you will get\n   * @param limit How many Item Attributes per page\n   * @returns A list of Item Attributes\n   */\n  public async listItemAttributes(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ItemAttribute}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Item Categories\n   * @param offset The first item that you will get\n   * @param limit How many Item Categories per page\n   * @returns A list of Item Categories\n   */\n  public async listItemCategories(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ItemCategory}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Item Filing Effects\n   * @param offset The first item that you will get\n   * @param limit How many Item Filing Effects per page\n   * @returns A list of Item Filing Effects\n   */\n  public async listItemFilingEffects(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ItemFlingEffect}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Item Pockets\n   * @param offset The first item that you will get\n   * @param limit How many Item Pockets per page\n   * @returns A list of Item Pockets\n   */\n  public async listItemPockets(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.ItemPocket}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { Location, LocationArea, NamedAPIResourceList, PalParkArea, Region } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Location Client\n *\n * Client used to access the Location Endpoints:\n *  - [Locations](https://pokeapi.co/docs/v2#locations)\n *  - [Location Areas](https://pokeapi.co/docs/v2#location-areas)\n *  - [Pal Park Areas](https://pokeapi.co/docs/v2#pal-park-areas)\n *  - [Regions](https://pokeapi.co/docs/v2#regions)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#locations-section)\n */\nexport class LocationClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Location by it's name\n   * @param name The Location name\n   * @returns A Location\n   */\n  public async getLocationByName(name: string): Promise<Location> {\n    return new Promise<Location>((resolve, reject) => {\n      this.api\n        .get<Location>(`${Endpoints.Location}/${name}`)\n        .then((response: AxiosResponse<Location>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Location by it's ID\n   * @param id The Location ID\n   * @returns A location\n   */\n  public async getLocationById(id: number): Promise<Location> {\n    return new Promise<Location>((resolve, reject) => {\n      this.api\n        .get<Location>(`${Endpoints.Location}/${id}`)\n        .then((response: AxiosResponse<Location>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Location Area by it's name\n   * @param name The Location Area name\n   * @returns A Location Area\n   */\n  public async getLocationAreaByName(name: string): Promise<LocationArea> {\n    return new Promise<LocationArea>((resolve, reject) => {\n      this.api\n        .get<LocationArea>(`${Endpoints.LocationArea}/${name}`)\n        .then((response: AxiosResponse<LocationArea>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Location Area by it's ID\n   * @param id The Location Area ID\n   * @returns A Location Area\n   */\n  public async getLocationAreaById(id: number): Promise<LocationArea> {\n    return new Promise<LocationArea>((resolve, reject) => {\n      this.api\n        .get<LocationArea>(`${Endpoints.LocationArea}/${id}`)\n        .then((response: AxiosResponse<LocationArea>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pal Park Area by it's name\n   * @param name The Pal Park Area name\n   * @returns A Pal Park Area\n   */\n  public async getPalParkAreaByName(name: string): Promise<PalParkArea> {\n    return new Promise<PalParkArea>((resolve, reject) => {\n      this.api\n        .get<PalParkArea>(`${Endpoints.PalParkArea}/${name}`)\n        .then((response: AxiosResponse<PalParkArea>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pal Park Area by it's ID\n   * @param id The Pal Park Area ID\n   * @returns A Pal Park Area\n   */\n  public async getPalParkAreaById(id: number): Promise<PalParkArea> {\n    return new Promise<PalParkArea>((resolve, reject) => {\n      this.api\n        .get<PalParkArea>(`${Endpoints.PalParkArea}/${id}`)\n        .then((response: AxiosResponse<PalParkArea>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Region by it's name\n   * @param name The Region name\n   * @returns A Region\n   */\n  public async getRegionByName(name: string): Promise<Region> {\n    return new Promise<Region>((resolve, reject) => {\n      this.api\n        .get<Region>(`${Endpoints.Region}/${name}`)\n        .then((response: AxiosResponse<Region>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Region by it's ID\n   * @param id The Region ID\n   * @returns A Region\n   */\n  public async getRegionById(id: number): Promise<Region> {\n    return new Promise<Region>((resolve, reject) => {\n      this.api\n        .get<Region>(`${Endpoints.Region}/${id}`)\n        .then((response: AxiosResponse<Region>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Locations\n   * @param offset The first item that you will get\n   * @param limit How many Locations per page\n   * @returns A list of Locations\n   */\n  public async listLocations(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Location}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Location Areas\n   * @param offset The first item that you will get\n   * @param limit How many Locations per page\n   * @returns A list of Location Areas\n   */\n  public async listLocationAreas(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.LocationArea}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pal Park Areas\n   * @param offset The first item that you will get\n   * @param limit How many Pal Park Areas per page\n   * @returns A list of Pal Park Areas\n   */\n  public async listPalParkAreas(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PalParkArea}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Regions\n   * @param offset The first item that you will get\n   * @param limit How many Regions per page\n   * @returns A list of Regions\n   */\n  public async listRegions(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Region}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { Machine, NamedAPIResourceList } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Machine Client\n *\n * Client used to access the Machine Endpoints:\n *  - [Machines](https://pokeapi.co/docs/v2#machines)\n *\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#machines-section)\n */\nexport class MachineClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Machine by it's ID\n   * @param id The Machine ID\n   * @returns A Machine\n   */\n  public async getMachineById(id: number): Promise<Machine> {\n    return new Promise<Machine>((resolve, reject) => {\n      this.api\n        .get<Machine>(`${Endpoints.Machine}/${id}`)\n        .then((response: AxiosResponse<Machine>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Machines\n   * @param offset The first item that you will get\n   * @param limit How many Machines per page\n   * @returns A list of Machines\n   */\n  public async listMachines(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Machine}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport {\n  Move,\n  MoveAilment,\n  MoveBattleStyle,\n  MoveCategory,\n  MoveDamageClass,\n  MoveLearnMethod,\n  MoveTarget,\n  NamedAPIResourceList,\n} from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Move Client\n *\n * Client used to access the Move Endpoints:\n *  - [Moves](https://pokeapi.co/docs/v2#moves)\n *  - [Move Ailments](https://pokeapi.co/docs/v2#move-ailments)\n *  - [Move Battle Styles](https://pokeapi.co/docs/v2#move-battle-styles)\n *  - [Move Categories](https://pokeapi.co/docs/v2#move-categories)\n *  - [Move Damage Classes](https://pokeapi.co/docs/v2#move-damage-classes)\n *  - [Move Learn Methods](https://pokeapi.co/docs/v2#move-learn-methods)\n *  - [Move Move Targets](https://pokeapi.co/docs/v2#move-targets)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#moves-section)\n */\nexport class MoveClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Move by it's name\n   * @param name The move name\n   * @returns A Move\n   */\n  public async getMoveByName(name: string): Promise<Move> {\n    return new Promise<Move>((resolve, reject) => {\n      this.api\n        .get<Move>(`${Endpoints.Move}/${name}`)\n        .then((response: AxiosResponse<Move>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move by it's ID\n   * @param id The Move ID\n   * @returns A Move\n   */\n  public async getMoveById(id: number): Promise<Move> {\n    return new Promise<Move>((resolve, reject) => {\n      this.api\n        .get<Move>(`${Endpoints.Move}/${id}`)\n        .then((response: AxiosResponse<Move>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Ailment by it's name\n   * @param name The Move Ailment name\n   * @returns A Move Ailment\n   */\n  public async getMoveAilmentByName(name: string): Promise<MoveAilment> {\n    return new Promise<MoveAilment>((resolve, reject) => {\n      this.api\n        .get<MoveAilment>(`${Endpoints.MoveAilment}/${name}`)\n        .then((response: AxiosResponse<MoveAilment>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Ailment by it's ID\n   * @param id The Move Ailment ID\n   * @returns A Move Ailment\n   */\n  public async getMoveAilmentById(id: number): Promise<MoveAilment> {\n    return new Promise<MoveAilment>((resolve, reject) => {\n      this.api\n        .get<MoveAilment>(`${Endpoints.MoveAilment}/${id}`)\n        .then((response: AxiosResponse<MoveAilment>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Battle Style by it's name\n   * @param name The Move Battle Style name\n   * @returns A Move Battle Style\n   */\n  public async getMoveBattleStyleByName(name: string): Promise<MoveBattleStyle> {\n    return new Promise<MoveBattleStyle>((resolve, reject) => {\n      this.api\n        .get<MoveBattleStyle>(`${Endpoints.MoveBattleStyle}/${name}`)\n        .then((response: AxiosResponse<MoveBattleStyle>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Battle Style by it's ID\n   * @param id The Move Battle Style ID\n   * @returns A Move Battle Style\n   */\n  public async getMoveBattleStyleById(id: number): Promise<MoveBattleStyle> {\n    return new Promise<MoveBattleStyle>((resolve, reject) => {\n      this.api\n        .get<MoveBattleStyle>(`${Endpoints.MoveBattleStyle}/${id}`)\n        .then((response: AxiosResponse<MoveBattleStyle>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Battle Category by it's name\n   * @param name The Move Category name\n   * @returns A Move Category\n   */\n  public async getMoveCategoryByName(name: string): Promise<MoveCategory> {\n    return new Promise<MoveCategory>((resolve, reject) => {\n      this.api\n        .get<MoveCategory>(`${Endpoints.MoveCategory}/${name}`)\n        .then((response: AxiosResponse<MoveCategory>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Battle Category by it's ID\n   * @param id The Move Category ID\n   * @returns A Move Category\n   */\n  public async getMoveCategoryById(id: number): Promise<MoveCategory> {\n    return new Promise<MoveCategory>((resolve, reject) => {\n      this.api\n        .get<MoveCategory>(`${Endpoints.MoveCategory}/${id}`)\n        .then((response: AxiosResponse<MoveCategory>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Damage Class by it's name\n   * @param name The Move Damage Class name\n   * @returns A Move Damage Class\n   */\n  public async getMoveDamageClassByName(name: string): Promise<MoveDamageClass> {\n    return new Promise<MoveDamageClass>((resolve, reject) => {\n      this.api\n        .get<MoveDamageClass>(`${Endpoints.MoveDamageClass}/${name}`)\n        .then((response: AxiosResponse<MoveDamageClass>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Damage Class by it's ID\n   * @param id The Move Damage Class ID\n   * @returns A Move Damage Class\n   */\n  public async getMoveDamageClassById(id: number): Promise<MoveDamageClass> {\n    return new Promise<MoveDamageClass>((resolve, reject) => {\n      this.api\n        .get<MoveDamageClass>(`${Endpoints.MoveDamageClass}/${id}`)\n        .then((response: AxiosResponse<MoveDamageClass>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Learn Method by it's name\n   * @param name The Move Learn Method name\n   * @returns A Move Learn Method\n   */\n  public async getMoveLearnMethodByName(name: string): Promise<MoveLearnMethod> {\n    return new Promise<MoveLearnMethod>((resolve, reject) => {\n      this.api\n        .get<MoveLearnMethod>(`${Endpoints.MoveLearnMethod}/${name}`)\n        .then((response: AxiosResponse<MoveLearnMethod>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Learn Method by it's ID\n   * @param id The Move Learn Method ID\n   * @returns A Move Learn Method\n   */\n  public async getMoveLearnMethodById(id: number): Promise<MoveLearnMethod> {\n    return new Promise<MoveLearnMethod>((resolve, reject) => {\n      this.api\n        .get<MoveLearnMethod>(`${Endpoints.MoveLearnMethod}/${id}`)\n        .then((response: AxiosResponse<MoveLearnMethod>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Target by it's name\n   * @param name The Move Target name\n   * @returns A Move Target\n   */\n  public async getMoveTargetByName(name: string): Promise<MoveTarget> {\n    return new Promise<MoveTarget>((resolve, reject) => {\n      this.api\n        .get<MoveTarget>(`${Endpoints.MoveTarget}/${name}`)\n        .then((response: AxiosResponse<MoveTarget>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Move Target by it's ID\n   * @param id The Move Target ID\n   * @returns A Move Target\n   */\n  public async getMoveTargetById(id: number): Promise<MoveTarget> {\n    return new Promise<MoveTarget>((resolve, reject) => {\n      this.api\n        .get<MoveTarget>(`${Endpoints.MoveTarget}/${id}`)\n        .then((response: AxiosResponse<MoveTarget>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Moves\n   * @param offset The first item that you will get\n   * @param limit How many Moves per page\n   * @returns A list of Moves\n   */\n  public async listMoves(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Move}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Ailments\n   * @param offset The first item that you will get\n   * @param limit How many Move Ailments per page\n   * @returns A list of Move Ailments\n   */\n  public async listMoveAilments(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveAilment}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Battle Styles\n   * @param offset The first item that you will get\n   * @param limit How many Move Battle Styles per page\n   * @returns A list of Move Battle Styles\n   */\n  public async listMoveBattleStyles(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveBattleStyle}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Categories\n   * @param offset The first item that you will get\n   * @param limit How many Move Categories per page\n   * @returns A list of Move Categories\n   */\n  public async listMoveCategories(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveCategory}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Damage Classes\n   * @param offset The first item that you will get\n   * @param limit How many Move Damage Classes per page\n   * @returns A list of Move Damage Classes\n   */\n  public async listMoveDamageClasses(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveDamageClass}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Learn Methods\n   * @param offset The first item that you will get\n   * @param limit How many Move Learn Methods per page\n   * @returns A list of Move Learn Methods\n   */\n  public async listMoveLearnMethods(\n    offset?: number,\n    limit?: number\n  ): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveLearnMethod}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Move Targets\n   * @param offset The first item that you will get\n   * @param limit How many Move Targets per page\n   * @returns A list of Move Targets\n   */\n  public async listMoveTargets(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.MoveTarget}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport {\n  Ability,\n  Characteristic,\n  EggGroup,\n  Gender,\n  GrowthRate,\n  LocationAreaEncounter,\n  NamedAPIResourceList,\n  Nature,\n  PokeathlonStat,\n  Pokemon,\n  PokemonColor,\n  PokemonForm,\n  PokemonHabitat,\n  PokemonShape,\n  PokemonSpecies,\n  Stat,\n  Type,\n} from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Pokemon Client\n *\n * Client used to access the Pokemon Endpoints:\n *  - [Abilities](https://pokeapi.co/docs/v2#abilities)\n *  - [Characteristics](https://pokeapi.co/docs/v2#characteristics)\n *  - [Egg Groups](https://pokeapi.co/docs/v2#egg-groups)\n *  - [Genders](https://pokeapi.co/docs/v2#genders)\n *  - [Growth Rates](https://pokeapi.co/docs/v2#growth-rates)\n *  - [Natures](https://pokeapi.co/docs/v2#natures)\n *  - [Pokeathlon Stats](https://pokeapi.co/docs/v2#pokeathlon-stats)\n *  - [Pokemon](https://pokeapi.co/docs/v2#pokemon)\n *  - [Pokemon Location Areas](https://pokeapi.co/docs/v2#pokemon-location-areas)\n *  - [Pokemon Colors](https://pokeapi.co/docs/v2#pokemon-colors)\n *  - [Pokemon Forms](https://pokeapi.co/docs/v2#pokemon-forms)\n *  - [Pokemon Habitats](https://pokeapi.co/docs/v2#pokemon-habitats)\n *  - [Pokemon Shapes](https://pokeapi.co/docs/v2#pokemon-shapes)\n *  - [Pokemon Species](https://pokeapi.co/docs/v2#pokemon-species)\n *  - [Stats](https://pokeapi.co/docs/v2#stats)\n *  - [Types](https://pokeapi.co/docs/v2#types)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#pokemon-section)\n */\nexport class PokemonClient extends BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get an Ability by it's name\n   * @param name The Ability name\n   * @returns An Ability\n   */\n  public async getAbilityByName(name: string): Promise<Ability> {\n    return new Promise<Ability>((resolve, reject) => {\n      this.api\n        .get<Ability>(`${Endpoints.Ability}/${name}`)\n        .then((response: AxiosResponse<Ability>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Ability by it's ID\n   * @param id The Ability ID\n   * @returns An Ability\n   */\n  public async getAbilityById(id: number): Promise<Ability> {\n    return new Promise<Ability>((resolve, reject) => {\n      this.api\n        .get<Ability>(`${Endpoints.Ability}/${id}`)\n        .then((response: AxiosResponse<Ability>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Characteristic by it's ID\n   * @param id The Characteristic ID\n   * @returns A Characteristic\n   */\n  public async getCharacteristicById(id: number): Promise<Characteristic> {\n    return new Promise<Characteristic>((resolve, reject) => {\n      this.api\n        .get<Characteristic>(`${Endpoints.Characteristic}/${id}`)\n        .then((response: AxiosResponse<Characteristic>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Egg Group by it's name\n   * @param name The Egg Group name\n   * @returns An Egg Group\n   */\n  public async getEggGroupByName(name: string): Promise<EggGroup> {\n    return new Promise<EggGroup>((resolve, reject) => {\n      this.api\n        .get<EggGroup>(`${Endpoints.EggGroup}/${name}`)\n        .then((response: AxiosResponse<EggGroup>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get an Egg Group by it's ID\n   * @param id The Egg Group ID\n   * @returns An Egg Group\n   */\n  public async getEggGroupById(id: number): Promise<EggGroup> {\n    return new Promise<EggGroup>((resolve, reject) => {\n      this.api\n        .get<EggGroup>(`${Endpoints.EggGroup}/${id}`)\n        .then((response: AxiosResponse<EggGroup>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Gender by it's name\n   * @param name The gender name\n   * @returns An Egg Group\n   */\n  public async getGenderByName(name: string): Promise<Gender> {\n    return new Promise<Gender>((resolve, reject) => {\n      this.api\n        .get<Gender>(`${Endpoints.Gender}/${name}`)\n        .then((response: AxiosResponse<Gender>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Gender by it's ID\n   * @param id The Gender ID\n   * @returns A Gender\n   */\n  public async getGenderById(id: number): Promise<Gender> {\n    return new Promise<Gender>((resolve, reject) => {\n      this.api\n        .get<Gender>(`${Endpoints.Gender}/${id}`)\n        .then((response: AxiosResponse<Gender>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Growth Rate by it's name\n   * @param name The Growth Rate name\n   * @returns A Growth Rate\n   */\n  public async getGrowthRateByName(name: string): Promise<GrowthRate> {\n    return new Promise<GrowthRate>((resolve, reject) => {\n      this.api\n        .get<GrowthRate>(`${Endpoints.GrowthRate}/${name}`)\n        .then((response: AxiosResponse<GrowthRate>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Growth Rate by it's ID\n   * @param id The Growth Rate ID\n   * @returns A Growth Rate\n   */\n  public async getGrowthRateById(id: number): Promise<GrowthRate> {\n    return new Promise<GrowthRate>((resolve, reject) => {\n      this.api\n        .get<GrowthRate>(`${Endpoints.GrowthRate}/${id}`)\n        .then((response: AxiosResponse<GrowthRate>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Nature by it's name\n   * @param name The Nature name\n   * @returns A Nature\n   */\n  public async getNatureByName(name: string): Promise<Nature> {\n    return new Promise<Nature>((resolve, reject) => {\n      this.api\n        .get<Nature>(`${Endpoints.Nature}/${name}`)\n        .then((response: AxiosResponse<Nature>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Nature by it's ID\n   * @param id The Nature ID\n   * @returns A Nature\n   */\n  public async getNatureById(id: number): Promise<Nature> {\n    return new Promise<Nature>((resolve, reject) => {\n      this.api\n        .get<Nature>(`${Endpoints.Nature}/${id}`)\n        .then((response: AxiosResponse<Nature>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokeathlon Stat by it's name\n   * @param name The Pokeathlon Stat name\n   * @returns A Pokeathlon Stat\n   */\n  public async getPokeathlonStatByName(name: string): Promise<PokeathlonStat> {\n    return new Promise<PokeathlonStat>((resolve, reject) => {\n      this.api\n        .get<PokeathlonStat>(`${Endpoints.PokeathlonStat}/${name}`)\n        .then((response: AxiosResponse<PokeathlonStat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokeathlon Stat by it's ID\n   * @param id The Pokeathlon Stat ID\n   * @returns A Pokeathlon Stat\n   */\n  public async getPokeathlonStatById(id: number): Promise<PokeathlonStat> {\n    return new Promise<PokeathlonStat>((resolve, reject) => {\n      this.api\n        .get<PokeathlonStat>(`${Endpoints.PokeathlonStat}/${id}`)\n        .then((response: AxiosResponse<PokeathlonStat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon by it's name\n   * @param name The Pokemon name\n   * @returns A Pokemon Stat\n   */\n  public async getPokemonByName(name: string): Promise<Pokemon> {\n    return new Promise<Pokemon>((resolve, reject) => {\n      this.api\n        .get<Pokemon>(`${Endpoints.Pokemon}/${name}`)\n        .then((response: AxiosResponse<Pokemon>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon by it's ID\n   * @param id The Pokemon ID\n   * @returns A Pokemon\n   */\n  public async getPokemonById(id: number): Promise<Pokemon> {\n    return new Promise<Pokemon>((resolve, reject) => {\n      this.api\n        .get<Pokemon>(`${Endpoints.Pokemon}/${id}`)\n        .then((response: AxiosResponse<Pokemon>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Location Area by it's ID\n   * @param id The Pokemon Location Area ID\n   * @returns A Pokemon Location Area\n   */\n  public async getPokemonLocationAreaById(id: number): Promise<LocationAreaEncounter[]> {\n    return new Promise<LocationAreaEncounter[]>((resolve, reject) => {\n      this.api\n        .get<LocationAreaEncounter[]>(\n          `${Endpoints.PokemonLocationArea.replace(':id', id.toString())}`\n        )\n        .then((response: AxiosResponse<LocationAreaEncounter[]>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Color by it's name\n   * @param name The Pokemon Color name\n   * @returns A Pokemon Color\n   */\n  public async getPokemonColorByName(name: string): Promise<PokemonColor> {\n    return new Promise<PokemonColor>((resolve, reject) => {\n      this.api\n        .get<PokemonColor>(`${Endpoints.PokemonColor}/${name}`)\n        .then((response: AxiosResponse<PokemonColor>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Color by it's ID\n   * @param id The Pokemon Color ID\n   * @returns A Pokemon Color\n   */\n  public async getPokemonColorById(id: number): Promise<PokemonColor> {\n    return new Promise<PokemonColor>((resolve, reject) => {\n      this.api\n        .get<PokemonColor>(`${Endpoints.PokemonColor}/${id}`)\n        .then((response: AxiosResponse<PokemonColor>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Form by it's name\n   * @param name The Pokemon Form name\n   * @returns A Pokemon Form\n   */\n  public async getPokemonFormByName(name: string): Promise<PokemonForm> {\n    return new Promise<PokemonForm>((resolve, reject) => {\n      this.api\n        .get<PokemonForm>(`${Endpoints.PokemonForm}/${name}`)\n        .then((response: AxiosResponse<PokemonForm>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Form by it's ID\n   * @param id The Pokemon Form ID\n   * @returns A Pokemon Form\n   */\n  public async getPokemonFormById(id: number): Promise<PokemonForm> {\n    return new Promise<PokemonForm>((resolve, reject) => {\n      this.api\n        .get<PokemonForm>(`${Endpoints.PokemonForm}/${id}`)\n        .then((response: AxiosResponse<PokemonForm>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Habitat by it's name\n   * @param name The Pokemon Habitat name\n   * @returns A Pokemon Habitat\n   */\n  public async getPokemonHabitatByName(name: string): Promise<PokemonHabitat> {\n    return new Promise<PokemonHabitat>((resolve, reject) => {\n      this.api\n        .get<PokemonHabitat>(`${Endpoints.PokemonHabitat}/${name}`)\n        .then((response: AxiosResponse<PokemonHabitat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Habitat by it's ID\n   * @param id The Pokemon Habitat Form ID\n   * @returns A Pokemon Habitat\n   */\n  public async getPokemonHabitatById(id: number): Promise<PokemonHabitat> {\n    return new Promise<PokemonHabitat>((resolve, reject) => {\n      this.api\n        .get<PokemonHabitat>(`${Endpoints.PokemonHabitat}/${id}`)\n        .then((response: AxiosResponse<PokemonHabitat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Shape by it's name\n   * @param name The Pokemon Shape name\n   * @returns A Pokemon Shape\n   */\n  public async getPokemonShapeByName(name: string): Promise<PokemonShape> {\n    return new Promise<PokemonShape>((resolve, reject) => {\n      this.api\n        .get<PokemonShape>(`${Endpoints.PokemonShape}/${name}`)\n        .then((response: AxiosResponse<PokemonShape>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Shape by it's ID\n   * @param id The Pokemon Shape Form ID\n   * @returns A Pokemon Shape\n   */\n  public async getPokemonShapeById(id: number): Promise<PokemonShape> {\n    return new Promise<PokemonShape>((resolve, reject) => {\n      this.api\n        .get<PokemonShape>(`${Endpoints.PokemonShape}/${id}`)\n        .then((response: AxiosResponse<PokemonShape>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Species by it's name\n   * @param name The Pokemon Species name\n   * @returns A Pokemon Species\n   */\n  public async getPokemonSpeciesByName(name: string): Promise<PokemonSpecies> {\n    return new Promise<PokemonSpecies>((resolve, reject) => {\n      this.api\n        .get<PokemonSpecies>(`${Endpoints.PokemonSpecies}/${name}`)\n        .then((response: AxiosResponse<PokemonSpecies>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Pokemon Species by it's ID\n   * @param id The Pokemon Species Form ID\n   * @returns A Pokemon Species\n   */\n  public async getPokemonSpeciesById(id: number): Promise<PokemonSpecies> {\n    return new Promise<PokemonSpecies>((resolve, reject) => {\n      this.api\n        .get<PokemonSpecies>(`${Endpoints.PokemonSpecies}/${id}`)\n        .then((response: AxiosResponse<PokemonSpecies>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Stat by it's name\n   * @param name The Stat name\n   * @returns A Stat\n   */\n  public async getStatByName(name: string): Promise<Stat> {\n    return new Promise<Stat>((resolve, reject) => {\n      this.api\n        .get<Stat>(`${Endpoints.Stat}/${name}`)\n        .then((response: AxiosResponse<Stat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Stat by it's ID\n   * @param id The Stat ID\n   * @returns A Stat\n   */\n  public async getStatById(id: number): Promise<Stat> {\n    return new Promise<Stat>((resolve, reject) => {\n      this.api\n        .get<Stat>(`${Endpoints.Stat}/${id}`)\n        .then((response: AxiosResponse<Stat>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Type by it's name\n   * @param name The Type name\n   * @returns A Type\n   */\n  public async getTypeByName(name: string): Promise<Type> {\n    return new Promise<Type>((resolve, reject) => {\n      this.api\n        .get<Type>(`${Endpoints.Type}/${name}`)\n        .then((response: AxiosResponse<Type>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Type by it's ID\n   * @param id The Type ID\n   * @returns A Type\n   */\n  public async getTypeById(id: number): Promise<Type> {\n    return new Promise<Type>((resolve, reject) => {\n      this.api\n        .get<Type>(`${Endpoints.Type}/${id}`)\n        .then((response: AxiosResponse<Type>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Abilities\n   * @param offset The first item that you will get\n   * @param limit How many Abilities per page\n   * @returns A list of Abilities\n   */\n  public async listAbilities(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Ability}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Characteristics\n   * @param offset The first item that you will get\n   * @param limit How many Characteristics per page\n   * @returns A list of Characteristics\n   */\n  public async listCharacteristics(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Characteristic}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Egg Groups\n   * @param offset The first item that you will get\n   * @param limit How many Egg Groups per page\n   * @returns A list of Egg Groups\n   */\n  public async listEggGroups(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.EggGroup}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Genders\n   * @param offset The first item that you will get\n   * @param limit How many Genders per page\n   * @returns A list of Genders\n   */\n  public async listGenders(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Gender}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Growth Rates\n   * @param offset The first item that you will get\n   * @param limit How many Growth Rates per page\n   * @returns A list of Growth Rates\n   */\n  public async listGrowthRates(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.GrowthRate}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Natures\n   * @param offset The first item that you will get\n   * @param limit How many Growth Natures per page\n   * @returns A list of Natures\n   */\n  public async listNatures(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Nature}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokeathlon Stats\n   * @param offset The first item that you will get\n   * @param limit How many Pokeathlon Stats per page\n   * @returns A list of Pokeathlon Stats\n   */\n  public async listPokeathlonStats(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokeathlonStat}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemons\n   * @param offset The first item that you will get\n   * @param limit How many Pokemons Stats per page\n   * @returns A list of Pokemons\n   */\n  public async listPokemons(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Pokemon}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemon Colors\n   * @param offset The first item that you will get\n   * @param limit How many Pokemon Colors per page\n   * @returns A list of Pokemon Colors\n   */\n  public async listPokemonColors(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokemonColor}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemon Forms\n   * @param offset The first item that you will get\n   * @param limit How many Pokemon Forms per page\n   * @returns A list of Pokemon Forms\n   */\n  public async listPokemonForms(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokemonForm}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemon Habitats\n   * @param offset The first item that you will get\n   * @param limit How many Pokemon Habitats per page\n   * @returns A list of Pokemon Habitats\n   */\n  public async listPokemonHabitats(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokemonHabitat}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemon Shapes\n   * @param offset The first item that you will get\n   * @param limit How many Pokemon Shapes per page\n   * @returns A list of Pokemon Shapes\n   */\n  public async listPokemonShapes(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokemonShape}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Pokemon Species\n   * @param offset The first item that you will get\n   * @param limit How many Pokemon Species per page\n   * @returns A list of Pokemon Species\n   */\n  public async listPokemonSpecies(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.PokemonSpecies}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Stats\n   * @param offset The first item that you will get\n   * @param limit How many Stats per page\n   * @returns A list of Stats\n   */\n  public async listStats(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Stat}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Types\n   * @param offset The first item that you will get\n   * @param limit How many Types per page\n   * @returns A list of Types\n   */\n  public async listTypes(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(`${Endpoints.Type}?offset=${offset || 0}&limit=${limit || 20}`)\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { Language, NamedAPIResourceList } from '../models';\nimport { Endpoints } from '../constants';\nimport { BaseClient, ClientArgs } from '../structures/base';\n\n/**\n * ### Utility Client\n *\n * Client used to access the Utility Endpoints:\n *  - [Languages](https://pokeapi.co/docs/v2#utility-section)\n *  - Resources\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2#utility-section)\n */\nexport class UtilityClient extends BaseClient {\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n  }\n\n  /**\n   * Get a Language by it's ID\n   * @param id The Language ID\n   * @returns Language\n   */\n  public async getLanguageById(id: number): Promise<Language> {\n    return new Promise<Language>((resolve, reject) => {\n      this.api\n        .get<Language>(`${Endpoints.Language}/${id}`)\n        .then((response: AxiosResponse<Language>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Language by it's name\n   * @param name The Language name\n   * @returns Language\n   */\n  public async getLanguageByName(name: string): Promise<Language> {\n    return new Promise<Language>((resolve, reject) => {\n      this.api\n        .get<Language>(`${Endpoints.Language}/${name}`)\n        .then((response: AxiosResponse<Language>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * Get a Resource by it's url\n   * @param url The Resource url\n   * @returns Resource\n   */\n  public async getResourceByUrl<T>(url: string): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.api\n        .get(url, { baseURL: '' })\n        .then((response: AxiosResponse<T>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n\n  /**\n   * List Languages\n   * @param offset The first item that you will get\n   * @param limit How many Languages per page\n   * @returns A list of Languages\n   */\n  public listLanguages(offset?: number, limit?: number): Promise<NamedAPIResourceList> {\n    return new Promise<NamedAPIResourceList>((resolve, reject) => {\n      this.api\n        .get<NamedAPIResourceList>(\n          `${Endpoints.Language}?offset=${offset || 0}&limit=${limit || 20}`\n        )\n        .then((response: AxiosResponse<NamedAPIResourceList>) => resolve(response.data))\n        .catch((error: AxiosError<string>) => reject(error));\n    });\n  }\n}\n","import { BaseClient, ClientArgs } from '../structures/base';\nimport { BerryClient } from './berry.client';\nimport { ContestClient } from './contest.client';\nimport { EncounterClient } from './encounter.client';\nimport { EvolutionClient } from './evolution.client';\nimport { GameClient } from './game.client';\nimport { ItemClient } from './item.client';\nimport { LocationClient } from './location.client';\nimport { MachineClient } from './machine.client';\nimport { MoveClient } from './move.client';\nimport { PokemonClient } from './pokemon.client';\n\n/**\n * ### Main Client\n *\n * The main client used to access all the Pok√©API Endpoints:\n *  - [Berries](https://pokeapi.co/docs/v2#berries-section)\n *  - [Contests](https://pokeapi.co/docs/v2#contests-section)\n *  - [Encounters](https://pokeapi.co/docs/v2#encounters-section)\n *  - [Evolution](https://pokeapi.co/docs/v2#evolution-section)\n *  - [Games](https://pokeapi.co/docs/v2#games-section)\n *  - [Items](https://pokeapi.co/docs/v2#items-section)\n *  - [Locations](https://pokeapi.co/docs/v2#locations-section)\n *  - [Machines](https://pokeapi.co/docs/v2#machines-section)\n *  - [Moves](https://pokeapi.co/docs/v2#moves-section)\n *  - [Pok√©mon](https://pokeapi.co/docs/v2#pokemon-section)\n *  - [Utility](https://pokeapi.co/docs/v2#utility-section)\n * ---\n * See [Pok√©API Documentation](https://pokeapi.co/docs/v2)\n */\nexport class MainClient extends BaseClient {\n  public berry: BerryClient;\n\n  public contest: ContestClient;\n\n  public encounter: EncounterClient;\n\n  public evolution: EvolutionClient;\n\n  public game: GameClient;\n\n  public item: ItemClient;\n\n  public location: LocationClient;\n\n  public machine: MachineClient;\n\n  public move: MoveClient;\n\n  public pokemon: PokemonClient;\n\n  constructor(clientOptions?: ClientArgs) {\n    super(clientOptions);\n\n    this.berry = new BerryClient(clientOptions);\n    this.contest = new ContestClient(clientOptions);\n    this.encounter = new EncounterClient(clientOptions);\n    this.evolution = new EvolutionClient(clientOptions);\n    this.game = new GameClient(clientOptions);\n    this.item = new ItemClient(clientOptions);\n    this.location = new LocationClient(clientOptions);\n    this.machine = new MachineClient(clientOptions);\n    this.move = new MoveClient(clientOptions);\n    this.pokemon = new PokemonClient(clientOptions);\n  }\n}\n"],"mappings":"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","names":["BaseURL","REST","Endpoints","Berry","BerryFirmness","BerryFlavor","ContestType","ContestEffect","SuperContestEffect","EncouterMethod","EncounterCondition","EncouterConditionValue","EvolutionChain","EvolutionTrigger","Generation","Pokedex","Version","VersionGroup","Item","ItemAttribute","ItemCategory","ItemFlingEffect","ItemPocket","Location","LocationArea","PalParkArea","Region","Machine","Move","MoveAilment","MoveBattleStyle","MoveCategory","MoveDamageClass","MoveLearnMethod","MoveTarget","Ability","Characteristic","EggGroup","Gender","GrowthRate","Nature","PokeathlonStat","Pokemon","PokemonLocationArea","PokemonColor","PokemonForm","PokemonHabitat","PokemonShape","PokemonSpecies","Stat","Type","Language","Berries","CHERI","CHESTO","PECHA","RAWST","ASPEAR","LEPPA","ORAN","PERSIM","LUM","SITRUS","FIGY","WIKI","MAGO","AGUAV","IAPAPA","RAZZ","BLUK","NANAB","WEPEAR","PINAP","POMEG","KELPSY","QUALOT","HONDEW","GREPA","TAMATO","CORNN","MAGOST","RABUTA","NOMEL","SPELON","PAMTRE","WATMEL","DURIN","BELUE","OCCA","PASSHO","WACAN","RINDO","YACHE","CHOPLE","KEBIA","SHUCA","COBA","PAYAPA","TANGA","CHARTI","KASIB","HABAN","COLBUR","BABIRI","CHILAN","LIECHI","GANLON","SALAC","PETAYA","APICOT","LANSAT","STARF","ENIGMA","MICLE","CUSTAP","JABOCA","ROWAP","BerryFirmnesses","VERY_SOFT","SOFT","HARD","VERY_HARD","SUPER_HARD","BerryFlavors","SPICY","DRY","SWEET","BITTER","SOUR","ContestTypes","COOL","BEAUTY","CUTE","SMART","TOUGH","EncounterMethods","WALK","OLD_ROD","GOOD_ROD","SUPER_ROD","SURF","ROCK_SMASH","HEADBUTT","DARK_GRASS","GRASS_SPOTS","CAVE_SPOTS","BRIDGE_SPOTS","SUPER_ROD_SPOTS","SURF_SPOTS","YELLOW_FLOWERS","PURPLE_FLOWERS","RED_FLOWERS","ROUGH_TERRAIN","GIFT","GIFT_EGG","ONLY_ONE","POKEFLUTE","HEADBUTT_LOW","HEADBUTT_NORMAL","HEADBUT_HIGH","SQUIRT_BOTTLE","WAILMER_PAIL","SEAWEED","EncounterConditions","SWARM","TIME","RADAR","SLOT2","RADIO","SEASON","STARTER","TV_OPTION","STORY_PROGRESS","OTHER","EncounterConditionValues","SWARM_YES","SWARM_NO","TIME_MORNING","TIME_DAY","TIME_NIGHT","RADAR_ON","RADAR_OFF","SLOT2_NONE","SLOT2_RUBY","SLOT2_SAPHIRE","SLOT2_EMERALD","SLOT2_FIRERED","SLOT2_LEAFGREEN","RADIO_OFF","RADIO_HOEN","RADIO_SINNOH","SEASON_SPRING","SEASON_SUMMER","SWASON_AUTUMN","SEASON_WINTER","STARTER_BULBASAUR","STARTER_SQUIRTLE","STARTER_CHARMANDER","STARTER_CHESPIN","STARTER_FENNEKIN","STARTER_FROAKIE","TV_OPTION_BLUE","TV_OPTION_RED","STORY_PROGRESS_AWAKENED_BEASTS","STORY_PROGRESS_BEAT_GALACTIC_CORONET","STORY_PROGRESS_OAK_ETERNA_CITY","STORY_PROGRESS_OAK_VERMILION_COPYCAT","STORY_PROGRESS_MET_TORNADUS_THUNDURUS","STORY_PROGRESS_BEAT_ELITE_FOUR_ROUND_TWO","STORY_PROGRESS_HALL_OF_FAME","STORY_PROGRESS_NONE","STORY_PROGRESS_NATIONAL_DEX","OTHER_NONE","OTHER_SNORLAX_LL_BEAT_LEAGUE","EvolutionTriggers","LEVEL_UP","TRADE","USE_ITEM","SHED","SPIN","TOWER_OF_DARKNESS","TOWER_OF_WATER","THREE_CRITICAL_HITS","TAKE_DAMAGE","OTHER","Generations","GENERATION_I","GENERATION_II","GENERATION_III","GENERATION_IV","GENERATION_V","GENERATION_VI","GENERATION_VII","GENERATION_VIII","Pokedexes","NATIONAL","KANTO","ORIGINAL_JOHTO","HOENN","ORIGINAL_SINNOH","EXTENDED_SINNOH","UPDATED_JOHTO","ORIGINAL_UNOVA","UPDATED_UNOVA","CONQUEST_GALLERY","KALOS_CENTRAL","KALOS_COASTAL","KALOS_MONTAIN","UPDATED_HOENN","ORIGINAL_ALOLA","ORIGINAL_MELEMELE","ORIGINAL_AKALA","ORIGINAL_ULAULA","ORIGINAL_PONI","UPDATED_ALOLA","UPDATED_MELEMELE","UPDATED_AKALA","UPDATED_ULAULA","UPDATED_PONI","UPDATED_KANTO","GALAR","ISLE_OF_ARMOR","CROWN_TUNDRA","Versions","RED","BLUE","YELLOW","GOLD","SILVER","CRYSTAL","RUBY","SAPPHIRE","EMERALD","FIRERED","LEAFGREEN","DIAMOND","PEARL","PLATINUM","HEARTGOLD","SOULSILVER","BLACK","WHITE","COLOSSEUM","XD","BLACK_2","WHITE_2","X","Y","OMEGA_RUBY","ALPHA_SAPPHIRE","SUN","MOON","ULTRA_SUN","ULTRA_MOON","LETS_GO_PIKACHU","LETS_GO_EEVEE","SWORD","SHIELD","THE_ISLE_OF_ARMOR","THE_CROWN_TUNDRA","BRILLIANT_DIAMOND","SHINING_PEARL","LEGENDS_ARCEUS","VersionGroups","RED_BLUE","GOLD_SILVER","RUBY_SAPPHIRE","FIRERED_LEAFGREEN","DIAMOND_PEARL","HEARTGOLD_SOULSILVER","BLACK_WHITE","BLACK_2_WHITE_2","X_Y","OMEGA_RUBY_ALPHA_SAPPHIRE","SUN_MOON","ULTRA_SUN_ULTRA_MOON","LETS_GO","SWORD_SHIELD","BRILLIANT_DIAMOND_AND_SHINING_PEARL","Regions","KANTO","JOHTO","HOENN","SINNOH","UNOVA","KALOS","ALOLA","GALAR","HISUI","PalParkAreas","FOREST","FIELD","MOUNTAIN","POND","SEA","MoveAilmtents","UNKNOWN","NONE","PARALYSIS","SLEEP","FREEZE","BURN","POISON","CONFUSION","INFATUATION","TRAP","NIGHTMARE","TORMENT","DISABLE","YAWN","HEAL_BLOCK","NO_TYPE_IMMUNITY","LEECH_SEED","EMBARGO","PERISH_SONG","INGRAIN","SILENCE","TAR_SHOT","MoveBattleStyles","ATTACK","DEFENSE","SUPPORT","MoveCategories","DAMAGE","AILMENT","NET_GOOD_STATS","HEAL","DAMAGE_AILMENT","SWAGGER","DAMAGE_LOWER","DAMAGE_RAISE","DAMAGE_HEAL","OHKO","WHOLE_FIELD_EFFECT","FIELD_EFFECT","FORCE_SWITCH","UNIQUE","MoveDamageClasses","STATUS","PHYSICAL","SPECIAL","MoveLearnMethods","LEVEL_UP","EGG","TUTOR","MACHINE","STADIUM_SURFING_PIKACHU","LIGHT_BALL_EGG","COLOSSEUM_PURIFICATION","XD_SHADOW","XD_PURIFICATION","FORM_CHANGE","MoveTargets","SPECIFIC_MOVE","SELECTED_POKEMON_ME_FIRST","ALLY","USERS_FIELD","USER_OR_ALLY","OPPONENTS_FIELD","USER","RANDOM_OPPONENT","ALL_OTHER_POKEMON","SELECTED_POKEMON","ALL_OPPONENTS","ENTIRE_FIELD","USER_AND_ALIES","ALL_POKEMON","ALL_ALLIES","EggGroups","MONSTER","WATER1","BUG","FLYING","GROUND","FAIRY","PLANT","HUMANSHAPE","WATER3","MINERAL","INDETERMINATE","WATER2","DITTO","DRAGON","NO_EGGS","Genders","FEMALE","MALE","GENDERLESS","GrowthRates","SLOW","MEDIUM","FAST","MEDIUM_SLOW","SLOW_THEN_VERY_FAST","FAST_THEN_VERY_SLOW","Natures","HARDY","BOLD","MODEST","CALM","TIMID","LONELY","DOCILE","MILD","GENTLE","HASTY","ADAMANT","IMPISH","BASHFUL","CAREFUL","RASH","JOLLY","NAUGHTY","LAX","QUIRKY","NAIVE","BRAVE","RELAXED","QUIET","SASSY","SERIOUS","PokeathlonStats","SPEED","POWER","SKILL","STAMINA","JUMP","PokemonColors","BLACK","BLUE","BROWN","GRAY","GREEN","PINK","PURPLE","RED","WHITE","YELLOW","PokemonHabitats","CAVE","FOREST","GRASSLAND","MONTAIN","RARE","ROUGH_TERRAIN","SEA","URBAN","WATERS_EDGE","PokemonShapes","BALL","SQUIGGLE","FISH","ARMS","BLOB","UPRIGHT","LEGS","QUADRUPED","WINGS","TENTACLES","HEADS","HUMANOID","BUG_WINGS","ARMOR","Stats","HP","ATTACK","DEFENSE","SPECIAL_ATTACK","SPECIAL_DEFENSE","ACCURACY","EVASION","Types","NORMAL","FIGHTING","POISON","ROCK","GHOST","STEEL","FIRE","WATER","GRASS","ELECTRIC","PSYCHIC","ICE","DARK","UNKNOWN","SHADOW","Languages","JA_HRKT","ROOMAJI","KO","ZH_HANT","FR","DE","ES","IT","EN","CS","JA","ZH_HANS","PT_BR","ItemAttributes","COUNTABLE","CONSUMABLE","USABLE_OVERWORLD","USABLE_IN_BATTLE","HOLDABLE","HOLDABLE_PASSIVE","HOLDABLE_ACTIVE","UNDERGROUND","ItemCategories","STAT_BOOSTS","EFFORT_DROP","MEDICINE","OTHER","IN_A_PINCH","PICKY_HEALING","TYPE_PROTECTION","BAKING_ONLY","COLLECTIBLES","EVOLUTION","SPELUNKING","HELD_ITEMS","CHOICE","EFFORT_TRAINING","BAD_HELD_ITEMS","TRAINING","PLATES","SPECIES_SPECIFIC","TYPE_ENHANCEMENT","EVENT_ITEMS","GAMEPLAY","PLOT_ADVANCEMENT","UNUSED","LOOT","ALL_MAIL","VITAMINS","HEALING","PP_RECOVERY","REVIVAL","STATUS_CURES","MULCH","SPECIAL_BALLS","STANDARD_BALLS","DEX_COMPLETION","SCARVES","ALL_MACHINES","FLUTES","APRICORN_BALLS","APRICORN_BOX","DATA_CARDS","JEWELS","MIRACLE_SHOOTER","MEGA_STONES","MEMORIES","Z_CRYSTALS","SPECIES_CANDIES","CATCHING_BONUS","DYNAMAX_CRISTALS","NATURE_MINTS","CURRY_INGREDIENTS","ItemFlingEffects","BADLY_POISON","BURN","BERRY_EFFECT","HERB_EFFECT","PARALYZE","POISON","FLINCH","ItemPockets","MISC","POKEBALLS","MACHINES","BERRIES","MAIL","BATTLE","KEY","axios","setupCache","pino","createLogger","options","pino","handleRequest","config","logger","info","method","toUpperCase","url","handleRequestError","error","code","message","handleResponse","response","data","handleResponseError","BaseClient","constructor","clientOptions","api","setupCache","axios","create","baseURL","BaseURL","REST","headers","cacheOptions","logger","createLogger","enabled","logOptions","undefined","interceptors","request","use","config","handleRequest","error","handleRequestError","response","handleResponse","handleResponseError","BerryClient","BaseClient","constructor","clientOptions","getBerryByName","name","Promise","resolve","reject","api","get","Endpoints","Berry","then","response","data","catch","error","getBerryById","id","getBerryFirmnessById","BerryFirmness","getBerryFirmnessByName","getBerryFlavorById","BerryFlavor","getBerryFlavorByName","listBerries","offset","limit","listBerryFirmnesses","listBerryFlavors","ContestClient","BaseClient","constructor","clientOptions","getContestTypeByName","name","Promise","resolve","reject","api","get","Endpoints","ContestType","then","response","data","catch","error","getContestTypeById","id","getContestEffectById","ContestEffect","getSuperContestEffectById","SuperContestEffect","listContestTypes","offset","limit","listContestEffects","listSuperContestEffects","EncounterClient","BaseClient","constructor","clientOptions","getEncounterMethodByName","name","Promise","resolve","reject","api","get","Endpoints","EncouterMethod","then","response","data","catch","error","getEncounterMethodById","id","getEncounterConditionById","EncounterCondition","getEncounterConditionByName","getEncounterConditionValueByName","EncouterConditionValue","getEncounterConditionValueById","listEncounterMethods","offset","limit","listEncounterConditions","listEncounterConditionValues","EvolutionClient","BaseClient","constructor","clientOptions","getEvolutionChainById","id","Promise","resolve","reject","api","get","Endpoints","EvolutionChain","then","response","data","catch","error","getEvolutionTriggerById","EvolutionTrigger","getEvolutionTriggerByName","name","listEvolutionChains","offset","limit","listEvolutionTriggers","GameClient","BaseClient","constructor","clientOptions","getGenerationByName","name","Promise","resolve","reject","api","get","Endpoints","Generation","then","response","data","catch","error","getGenerationById","id","getPokedexByName","Pokedex","getPokedexById","getVersionByName","Version","getVersionById","getVersionGroupByName","VersionGroup","getVersionGroupById","listGenerations","offset","limit","listPokedexes","listVersions","listVersionGroups","ItemClient","BaseClient","constructor","clientOptions","getItemByName","name","Promise","resolve","reject","api","get","Endpoints","Item","then","response","data","catch","error","getItemById","id","getItemAttributeByName","ItemAttribute","getItemAttributeById","getItemCategoryByName","ItemCategory","getItemCategoryById","getItemFlingEffectByName","ItemFlingEffect","getItemFlingEffectById","getItemPocketByName","ItemPocket","getItemPocketById","listItems","offset","limit","listItemAttributes","listItemCategories","listItemFilingEffects","listItemPockets","LocationClient","BaseClient","constructor","clientOptions","getLocationByName","name","Promise","resolve","reject","api","get","Endpoints","Location","then","response","data","catch","error","getLocationById","id","getLocationAreaByName","LocationArea","getLocationAreaById","getPalParkAreaByName","PalParkArea","getPalParkAreaById","getRegionByName","Region","getRegionById","listLocations","offset","limit","listLocationAreas","listPalParkAreas","listRegions","MachineClient","BaseClient","constructor","clientOptions","getMachineById","id","Promise","resolve","reject","api","get","Endpoints","Machine","then","response","data","catch","error","listMachines","offset","limit","MoveClient","BaseClient","constructor","clientOptions","getMoveByName","name","Promise","resolve","reject","api","get","Endpoints","Move","then","response","data","catch","error","getMoveById","id","getMoveAilmentByName","MoveAilment","getMoveAilmentById","getMoveBattleStyleByName","MoveBattleStyle","getMoveBattleStyleById","getMoveCategoryByName","MoveCategory","getMoveCategoryById","getMoveDamageClassByName","MoveDamageClass","getMoveDamageClassById","getMoveLearnMethodByName","MoveLearnMethod","getMoveLearnMethodById","getMoveTargetByName","MoveTarget","getMoveTargetById","listMoves","offset","limit","listMoveAilments","listMoveBattleStyles","listMoveCategories","listMoveDamageClasses","listMoveLearnMethods","listMoveTargets","PokemonClient","BaseClient","constructor","clientOptions","getAbilityByName","name","Promise","resolve","reject","api","get","Endpoints","Ability","then","response","data","catch","error","getAbilityById","id","getCharacteristicById","Characteristic","getEggGroupByName","EggGroup","getEggGroupById","getGenderByName","Gender","getGenderById","getGrowthRateByName","GrowthRate","getGrowthRateById","getNatureByName","Nature","getNatureById","getPokeathlonStatByName","PokeathlonStat","getPokeathlonStatById","getPokemonByName","Pokemon","getPokemonById","getPokemonLocationAreaById","PokemonLocationArea","replace","toString","getPokemonColorByName","PokemonColor","getPokemonColorById","getPokemonFormByName","PokemonForm","getPokemonFormById","getPokemonHabitatByName","PokemonHabitat","getPokemonHabitatById","getPokemonShapeByName","PokemonShape","getPokemonShapeById","getPokemonSpeciesByName","PokemonSpecies","getPokemonSpeciesById","getStatByName","Stat","getStatById","getTypeByName","Type","getTypeById","listAbilities","offset","limit","listCharacteristics","listEggGroups","listGenders","listGrowthRates","listNatures","listPokeathlonStats","listPokemons","listPokemonColors","listPokemonForms","listPokemonHabitats","listPokemonShapes","listPokemonSpecies","listStats","listTypes","UtilityClient","BaseClient","constructor","clientOptions","getLanguageById","id","Promise","resolve","reject","api","get","Endpoints","Language","then","response","data","catch","error","getLanguageByName","name","getResourceByUrl","url","baseURL","listLanguages","offset","limit","MainClient","BaseClient","constructor","clientOptions","berry","BerryClient","contest","ContestClient","encounter","EncounterClient","evolution","EvolutionClient","game","GameClient","item","ItemClient","location","LocationClient","machine","MachineClient","move","MoveClient","pokemon","PokemonClient"]}